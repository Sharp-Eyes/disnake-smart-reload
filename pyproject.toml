[tool.poetry]
name = "disnake-smart-reload"
version = "0.1.0"
description = ""
authors = ["Chromosomologist <chromosomologist@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "smart_reload", from = "src"}]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.examples.dependencies]
disnake = "^2.9.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.3"
pre-commit = "^3.8.0"

[tool.pyright]
typeCheckingMode = "strict"
python-version = 3.9
reportMissingTypeStubs = false

[tool.ruff]
target-version = "py39"
select = ["ALL"]
ignore = [
    # `self` and `cls` do not need annotations.
    "ANN101", "ANN102",
    # Magic methods do not need documentation.
    "D105",
    # Class docstrings are at the class level.
    "D107",
    # We use assertions as an in-place alternative to `typing.cast`.
    "S101",
    # Pyright error codes are obnoxiously long.
    "PGH003",
    # TODO / HACK comments do not need to be flagged.
    "FIX002", "FIX004",
    # TODO comments do not need to have an author or issue specified.
    "TD002", "TD003",
    # Function calls in parameter defaults are disnake syntax.
    "B008",
    # We don't use pandas and this triggers on any `.values` access.
    "PD",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["T201", "D"]
"__init__.py" = ["F403"]
